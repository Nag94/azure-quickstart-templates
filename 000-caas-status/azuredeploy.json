{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUserName": {
      "type": "string",
      "defaultValue": "devops",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "caas-status",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "db_driver": {
      "type": "string",
      "defaultValue": "pgsql",
      "metadata": {
        "description": "Database driver."
      }
    },
    "db_host": {
      "type": "string",
      "defaultValue":"postgres",
      "metadata": {
        "description": "Database Hostname."
      }
    },
    "db_database": {
      "type": "string",
      "defaultValue":"postgres",
      "metadata": {
        "description": "Database Name."
      }
    },
    "db_username": {
      "type": "string",
      "defaultValue":"postgres",
      "metadata": {
        "description": "Database user."
      }
    },
    "db_password": {
      "type": "string",
      "defaultValue":"postgres",
      "metadata": {
        "description": "database admin user."
      }
    },
    "postgres_user": {
      "type": "string",
      "defaultValue":"postgres",
      "metadata": {
        "description": "PG user."
      }
    },
    "postgres_password": {
      "type": "string",
      "defaultValue":"postgres",
      "metadata": {
        "description": "PG password."
      }
    },
    "mail_host": {
      "type": "string",
      "defaultValue":"smtp.example.com",
      "metadata": {
        "description": "Mail server."
      }
    },
    "mail_port": {
      "type": "string",
      "defaultValue":"587",
      "metadata": {
        "description": "Mail server port."
      }
    },
    "mail_username": {
      "type": "string",
      "defaultValue":"hello@hello.fr",
      "metadata": {
        "description": "Mail user Name."
      }
    },
    "mail_password": {
      "type": "string",
      "defaultValue":"Paswword",
      "metadata": {
        "description": "User Mail password."
      }
    },
    "mail_address": {
      "type": "string",
      "defaultValue":"herve.leclerc@alterway.fr",
      "metadata": {
        "description": "Mail From."
      }
    },
    "mail_name": {
      "type": "string",
      "defaultValue":"cachethq",
      "metadata": {
        "description": "Service Name."
      }
    }
  },
  "variables": {
    "template_url": "https://raw.githubusercontent.com/herveleclerc/azure-quickstart-templates/master",
    "vmSize": "Standard_DS1",
    "ubuntuOSVersion": "16.04.0-LTS",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sacs')]",
    "uniqueDnsLabelPrefix": "[concat('store', uniquestring(resourceGroup().id))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "osDiskName": "osDisk1",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-Status",
    "subnet1Prefix": "10.0.0.0/24",
    "vmStorageAccountContainerName": "vhds",
    "nicName": "csNIC",
    "publicIPAddressName": "csPublicIP",
    "publicIPAddressType": "Dynamic",
    "storageAccountType": "Premium_LRS",
    "virtualNetworkName": "cseVNET",
    "networkSecurityGroupName": "networkSecurityGroup1",
    "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "apiVersion": "2015-06-15",
    "extensionName": "DockerExtension"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
              "description": "Locks inbound down to ssh default port 22.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 123,
              "direction": "Inbound"
            }
          },
          {
            "name": "http_rule",
            "properties": {
              "description": "Default HTTP port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 124,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('uniqueDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', variables('osDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/configurecachet')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
        "[concat('Microsoft.Compute/virtualMachines/extensions/', parameters('vmName'),'/', variables('extensionName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('template_url'),'/000-caas-status/setup.sh')]"
          ],
          "commandToExecute": "/bin/bash setup.sh"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/', variables('extensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "environment": {
            "DB_DRIVER": "[parameters('db_driver')]",
            "DB_HOST": "[parameters('db_host')]",
            "DB_DATABASE": "[parameters('db_database')]",
            "DB_USERNAME": "[parameters('db_username')]",
            "DB_PASSWORD": "[parameters('db_password')]",
            "POSTGRES_USER": "[parameters('postgres_user')]",
            "POSTGRES_PASSWORD": "[parameters('postgres_password')]",
            "MAIL_HOST": "[parameters('mail_host')]",
            "MAIL_PORT": "[parameters('mail_port')]",
            "MAIL_USERNAME": "[parameters('mail_username')]",
            "MAIL_PASSWORD": "[parameters('mail_password')]",
            "MAIL_ADDRESS": "[parameters('mail_address')]",
            "MAIL_NAME": "[parameters('mail_name')]"
          }
        },
        "settings": {
          "compose": {
            "version" : "2",
            "services": {
               "postgres": {
                 "image": "postgres:9.5",
                 "volumes": [
                   "/var/lib/postgresql/data:/var/lib/postgresql/data"
                 ],
                 "environment": [
                   "POSTGRES_USER",
                   "POSTGRES_PASSWORD"
                 ]
               },
               "cachet": {
                 "build": {
                   "context": "https://github.com/CachetHQ/Docker.git"
                 },
                 "ports": [
                   "80:80"
                 ],
                 "links": [
                   "postgres:postgres"
                 ],
                 "environment": [
                   "DB_DRIVER",
                   "DB_HOST",
                   "DB_DATABASE",
                   "DB_USERNAME",
                   "DB_PASSWORD",
                   "MAIL_HOST",
                   "MAIL_PORT",
                   "MAIL_USERNAME",
                   "MAIL_PASSWORD",
                   "MAIL_ADDRESS",
                   "MAIL_NAME"
                 ],
                 "depends_on": [
                   "postgres"
                 ]
              }
            }
          }
        }
      }
    }
  ],
    "outputs": {
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', variables('uniqueDnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    }
  }
}
